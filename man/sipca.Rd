% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sipca.R
\docType{methods}
\name{sipca}
\alias{sipca}
\alias{sipca,MultiAssayExperiment-method}
\title{Independent Principal Component Analysis}
\usage{
\S4method{sipca}{ANY}X, ncomp  = 3, mode = c("deflation","parallel"),
fun = c("logcosh", "exp"), scale = FALSE, max.iter = 200,
tol = 1e-04, keepX = rep(50,ncomp), w.init = NULL)

\S4method{sipca}{MultiAssayExperiment}(X, ncomp = 2, ..., assay = NULL)
}
\arguments{
\item{X}{A numeric matrix (or data frame) which provides the data for the
principal components analysis. It can contain missing values.
Alternatively, a \code{MultiAssayExperiment} object.}

\item{ncomp}{Integer, if data is complete \code{ncomp} decides the number of
components and associated eigenvalues to display from the \code{pcasvd}
algorithm and if the data has missing values, \code{ncomp} gives the number
of components to keep to perform the reconstitution of the data using the
NIPALS algorithm. If \code{NULL}, function sets \code{ncomp = min(nrow(X),
ncol(X))}.}

\item{...}{aguments passed to the generic.}

\item{assay}{Name or index of an assay from \code{X}.}
}
\value{
\code{pca} returns a list with class \code{"ipca"} containing the
following components: \item{ncomp}{the number of principal components used.}
\item{unmixing}{the unmixing matrix of size (ncomp x ncomp)}
\item{mixing}{the mixing matrix of size (ncomp x ncomp} \item{X}{the
centered data matrix} \item{x}{the principal components (with sparse
independent loadings)} \item{loadings}{the sparse independent loading
vectors} \item{kurtosis}{the kurtosis measure of the independent loading
vectors}
}
\description{
Performs sparse independent principal component analysis on the given data
matrix to enable variable selection.

See Details of ipca.

Soft thresholding is implemented on the independent loading vectors to
obtain sparse loading vectors and enable variable selection.
}
\examples{
#' \dontrun{
## successful: FALSE

library(mixOmics.data)

# implement IPCA on a microarray dataset
sipca.res <- sipca(liver.toxicity$gene, ncomp = 3, mode="deflation", keepX=c(50,50,50))
sipca.res
# samples representation
plotIndiv(sipca.res, ind.names = liver.toxicity$treatment[, 4],
          group = as.numeric(as.factor(liver.toxicity$treatment[, 4])))
plotIndiv(sipca.res, cex = 1,
          col = as.numeric(as.factor(liver.toxicity$treatment[, 4])),style="3d")

# variables representation
plotVar(sipca.res, cex = 2.5)
plotVar(sipca.res, rad.in = 0.5, cex = 1,style="3d", cutoff = 0.75)
#' }
}
\references{
Yao, F., Coquery, J. and LÃª Cao, K.-A. (2011) Principal
component analysis with independent loadings: a combination of PCA and ICA.
(in preparation)

A. Hyvarinen and E. Oja (2000) Independent Component Analysis: Algorithms
and Applications, \emph{Neural Networks}, \bold{13(4-5)}:411-430

J L Marchini, C Heaton and B D Ripley (2010). fastICA: FastICA Algorithms to
perform ICA and Projection Pursuit. R package version 1.1-13.
}
\seealso{
\code{\link{ipca}}, \code{\link{pca}}, \code{\link{plotIndiv}},
\code{\link{plotVar}} and http://www.mixOmics.org for more details.
}
\author{
Fangzhou Yao and Jeff Coquery.
}
\keyword{algebra}
